services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_me}
      POSTGRES_DB: ${POSTGRES_DB:-benchmarks}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U app -d benchmarks']
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - app

  server:
    build:
      context: ./server
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
      PORT: ${PORT:-3001}
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-change_me}@db:5432/${POSTGRES_DB:-benchmarks}?schema=public}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '3001:3001'
    command: sh -c "npx prisma migrate deploy && node dist/index.js"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3001/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app
  frontend:
    build:
      context: ./frontend
    environment:
      NODE_ENV: production
      # Public base URL for API calls from the Next.js app (server and client)
      NEXT_PUBLIC_API_BASE_URL: https://encodingdb.platinumlabs.dev
    depends_on:
      server:
        condition: service_started
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app
  nginx:
    image: nginx:1.27-alpine
    depends_on:
      server:
        condition: service_started
      frontend:
        condition: service_started
    ports:
      - "8443:443"
      - "8080:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    restart: unless-stopped
    networks:
      - app

volumes:
  db_data:

networks:
  app:


